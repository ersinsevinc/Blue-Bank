@model BlueBank.WebFrontEnd.Models.ReviewVM

@{
    ViewBag.Title = "Create";
}

<h2 class="display-4">Create Review</h2>

@if (ViewBag.Success != null && ViewBag.Success == true)
{
    <div class="alert alert-success text-center">
        Review Created succesfuly !
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
    </div>
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.SupervisorFullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SupervisorFullName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.SupervisorFullName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.review.SupervisorId, new { htmlAttributes = new { @class = "form-control", @hidden = "true" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeFullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeFullName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.EmployeeFullName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.review.EmployeeId, new { htmlAttributes = new { @class = "form-control", @hidden = "true" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.review.Performance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.review.Performance, new { htmlAttributes = new { @class = "form-control" } })

                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.review.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.review.Date, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.review.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.review.Comment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.review.Comment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

            @if (Model.review.Errors.Count() > 0)
            {
                <ul class="alert alert-danger">
                    @foreach (BlueBank.Model.Error error in Model.review.Errors)
                    {
                        <li>@Html.DisplayFor(desc => error.Description)</li>
                    }
                </ul>

            }
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
