@model BlueBank.Model.Login

@{
    ViewBag.Title = "Index";
}

<div class="text-center" style="margin-top: 70px;">
    <h2 class="display-4">Login</h2>
</div>

<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="text-center">
        <div style="border: 1px solid grey; display: inline-block; text-align: initial; padding: 15px; border-radius: 15px;">
            @if (Model.Errors.Count > 0)
            {
                <div class="text-danger">
                    <ul>
                        @foreach (var error in Model.Errors)
                        {
                            <li>@error.Description</li>
                        }
                    </ul>
                </div>
            }
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col" })
                <div class="col">
                    @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                    @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col" })
                <div class="col">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col text-center">
                    <input class="btn btn-primary" type="submit" value="Log In" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
