@model BlueBank.WebFrontEnd.Models.PurchaseOrderVM

@{
    ViewBag.Title = "Create";
}

<div class="text-center" style="margin-top: 70px;">
    <h2 class="display-4">Create Purchase Order</h2>
</div>

<hr />

@if (Model.PurchaseOrder.PurchaseOrderId > 0)
{
    <h3 class="text-success">Purchase Order Inserted successfully. New generated id: @Model.PurchaseOrder.PurchaseOrderId</h3>
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h4>Purchase Order Information:</h4>
    <div class="row" style="padding: 20px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.PurchaseOrder.PurchaseOrderId)

        <div class="col">
            @Html.LabelFor(model => model.PurchaseOrder.CreationDate)<br />
            @Html.EditorFor(model => model.PurchaseOrder.CreationDate, new { htmlAttributes = new { @readonly = "readonly" } })
        </div>

        <div class="col">
            @Html.LabelFor(model => model.EmployeeName)<br />
            @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @readonly = "readonly" } })
        </div>

        <div class="col">
            @Html.LabelFor(model => model.PurchaseOrder.Department)<br />
            @Html.EditorFor(model => model.PurchaseOrder.Department, new { htmlAttributes = new { @readonly = "readonly" } })
        </div>

        <div class="col">
            @Html.LabelFor(model => model.SupervisorName)<br />
            @Html.EditorFor(model => model.SupervisorName, new { htmlAttributes = new { @readonly = "readonly" } })
        </div>

        @Html.HiddenFor(model => model.PurchaseOrder.EmployeeId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
    </div>

    <div class="bg-dark text-light p-2">
        <h4 class="text-center">Add Item(s)</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row m-auto">
            <div class="col d-block m-auto">
                <div class="form-group">
                    @Html.LabelFor(model => model.ItemToAdd.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemToAdd.Name, new { htmlAttributes = new { @class = "form-control", data_val = Model.SettedAsValid ? "false" : "true" } })
                        @Html.ValidationMessageFor(model => model.ItemToAdd.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemToAdd.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemToAdd.Description, new { htmlAttributes = new { @class = "form-control", data_val = Model.SettedAsValid ? "false" : "true" } })
                        @Html.ValidationMessageFor(model => model.ItemToAdd.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col d-block m-auto">

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemToAdd.Justification, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemToAdd.Justification, new { htmlAttributes = new { @class = "form-control", data_val = Model.SettedAsValid ? "false" : "true" } })
                        @Html.ValidationMessageFor(model => model.ItemToAdd.Justification, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ItemToAdd.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemToAdd.Location, new { htmlAttributes = new { @class = "form-control", data_val = Model.SettedAsValid ? "false" : "true" } })
                        @Html.ValidationMessageFor(model => model.ItemToAdd.Location, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col d-block m-auto">

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemToAdd.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemToAdd.Price, new { htmlAttributes = new { @class = "form-control", data_val = Model.SettedAsValid ? "false" : "true" } })
                        @Html.ValidationMessageFor(model => model.ItemToAdd.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemToAdd.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemToAdd.Quantity, new { htmlAttributes = new { @class = "form-control", data_val = Model.SettedAsValid ? "false" : "true" } })
                        @Html.ValidationMessageFor(model => model.ItemToAdd.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

        </div>
        <div class="m-auto">
            <input name="addItem" type="submit" value="Add To List" class="btn btn-success" />
            @Html.ActionLink("Reset", "ResetItemForm", "PO", new { from = "create" }, new { @class = "btn btn-primary" })
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.ItemToAdd.PurchaseOrderId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemToAdd.PurchaseOrderId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemToAdd.PurchaseOrderId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ItemToAdd.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemToAdd.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemToAdd.Date, "", new { @class = "text-danger" })
                </div>
            </div>*@
    </div>
    <div>
        @if (Model.PurchaseOrder.Items.Count > 0)
        {

            <table class="table table-secondary table-striped mt-3 text-center">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ItemToAdd.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ItemToAdd.Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ItemToAdd.Price)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ItemToAdd.Location)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ItemToAdd.Justification)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ItemToAdd.Quantity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ItemToAdd.subtotal)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ItemToAdd.PurchaseOrderId)
                        </th>
                    </tr>
                </thead>


                <tbody>
                    @foreach (var item in Model.PurchaseOrder.Items)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Location)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Justification)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.subtotal)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PurchaseOrderId)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }

        <div class="row" style="padding: 15px;">
            <div class="col" style="background-color: lightblue; padding: 4px; margin: 4px;">
                @Html.LabelFor(model => model.PurchaseOrder.Subtotal):
                <b>@Html.DisplayFor(model => model.PurchaseOrder.Subtotal)</b>
            </div>

            <div class="col" style="background-color: lightblue; padding: 4px; margin: 4px;">
                @Html.LabelFor(model => model.PurchaseOrder.Tax):
                <b>@Html.DisplayFor(model => model.PurchaseOrder.Tax)</b>
            </div>

            <div class="col" style="background-color: lightblue; padding: 4px; margin: 4px;">
                @Html.LabelFor(model => model.PurchaseOrder.TotalAfterTax):
                <b>@Html.DisplayFor(model => model.PurchaseOrder.TotalAfterTax)</b>
            </div>

            <div class="col" style="background-color: lightblue; padding: 4px; margin: 4px;">
                @Html.LabelFor(model => model.PurchaseOrder.TaxRate):
                <b>@Html.DisplayFor(model => model.PurchaseOrder.TaxRate)</b>
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
